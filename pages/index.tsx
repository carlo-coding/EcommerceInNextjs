import type { NextPage } from 'next'
import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import App from 'next/app';
import React from 'react';
import { GetStaticProps } from 'next';
import type { Product } from '@ent-product/types';
import productApi from '@ent-product/api';
import { Button, Grid, Stack, Text } from "@chakra-ui/react";
import { useState } from 'react';
import Link from "next/link";
import { styled } from '@mui/material';
import { useMemo } from 'react';
type Props = {
  products: Product[]
}

const f = new Intl.NumberFormat("es-MX", {
  style: "currency",
  currency: "MXN",
  minimumFractionDigits: 2
})

const CustomLink = styled("a")`
  padding: 0.5em 1em;
  background-color: green;
  color: white;
  text-align: center;
  border-radius: 5px;
`;

const CustomImage = styled(Image)`
  object-fit: cover;
`;


const whatsapp = "000000000";
const customMsg = "Hola, me comunico con usted para obtener más información de los siguientes productos: \n"

const Home: NextPage<Props> = ({ products }) => {
  const [cart, setCart] = useState<Product[]>([]);

  const text = useMemo(()=> {
    return cart.reduce((msg, product)=> {
      return msg.concat(`* ${product.title} - ${f.format(product.price)}\n`);
    }, "")
    .concat(`Total: ${f.format(
      cart.reduce((total, product)=> total+product.price, 0)
    )}`)
  }, [cart]);

  const handleClick = (product: Product) => (): void => setCart(cart=>[...cart, product]);

  return (
    <div className={styles.container}>
      <Head>
        <title>Ecommerce en Nextjs</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Stack>
        <Grid templateColumns="repeat(auto-fill, minmax(240px, 1fr))" gridGap={10} mt={50}>
          {products.map(product=> (
            <Stack key={product.id} backgroundColor="gray.100">
              <CustomImage src={product.image} height={200} width={100}/>
              <Text>{product.title}</Text>
              <Text>{f.format(product.price)}</Text>
              <Button colorScheme="blue" onClick={handleClick(product)}>Agregar</Button>
            </Stack>
          ))}
        </Grid>
        {!!cart.length && (
          <CustomLink href={`https://wa.me/${whatsapp}?text=${encodeURIComponent(customMsg+text)}`} target="_blank">
            Completar pedido
          </CustomLink>
        )}
      </Stack>

      <footer className={styles.footer}>
      </footer>
    </div>
  )
}

export default Home


export const getStaticProps: GetStaticProps = async ()=> {
  const products = await productApi.list();
  
  /* 
    Si entran 100 usuarios esos 100 suaurios
    van a ver la información cacheada del 
    primer usuario que entró, es por eso que 
    debemos pasar la opción revalidate que definies 
    cuantos seguntos deben pasar para volver a 
    hacer fetch al server
  */
  return {
    props: {
      products
    },
    revalidate: 3 // 3 horas
  }
}